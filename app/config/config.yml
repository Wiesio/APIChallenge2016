imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"
        types:
            enum_season_tier:    AppBundle\Type\EnumSeasonTierType
            enum_match_mode:     AppBundle\Type\EnumMatchModeType
            enum_match_type:     AppBundle\Type\EnumMatchTypeType
            enum_queue_type:     AppBundle\Type\EnumQueueTypeType
            enum_lane:           AppBundle\Type\EnumLaneType
            enum_role:           AppBundle\Type\EnumRoleType
            enum_ascended_type:  AppBundle\Type\EnumAscendedTypeType
            enum_building_type:  AppBundle\Type\EnumBuildingTypeType
            enum_event_type:     AppBundle\Type\EnumEventTypeType
            enum_lane_type:      AppBundle\Type\EnumLaneTypeType
            enum_level_up_type:  AppBundle\Type\EnumLevelUpTypeType
            enum_monster_type:   AppBundle\Type\EnumMonsterTypeType
            enum_point_captured: AppBundle\Type\EnumPointCapturedType
            enum_tower_type:     AppBundle\Type\EnumTowerTypeType
            enum_ward_type:      AppBundle\Type\EnumWardTypeType
        mapping_types:
            enum:    string

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                auto_mapping: true
                naming_strategy: doctrine.orm.naming_strategy.underscore

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# Doctrine extensions configuration
stof_doctrine_extensions:
    default_locale: en_US
    orm:
        default:
            timestampable: true

# RabbitMQ Configuration
old_sound_rabbit_mq:
    connections:
        default:
            host:     'localhost'
            port:     5672
            user:     'guest'
            password: 'guest'
            vhost:    '/'
            lazy:     true
            connection_timeout: 3
            read_write_timeout: 3

            # requires php-amqplib v2.4.1+ and PHP5.4+
            keepalive: false

            # requires php-amqplib v2.4.1+
            heartbeat: 0

    rpc_clients:
        riot_api_request_eune:
            connection: default
            unserializer: json_decode

        riot_api_request_euw:
            connection: default
            unserializer: json_decode

        riot_api_request_na:
            connection: default
            unserializer: json_decode

    rpc_servers:
        riot_api_response_eune:
            connection: default
            callback:   riot_api_response_eune_server
            qos_options: {prefetch_size: 0, prefetch_count: 500, global: true}
            exchange_options: {name: riot_api_response_eune, type: topic}
            queue_options: {name: riot_api_response_eune_queue, durable: false, auto_delete: true}
            serializer: json_encode
            
        riot_api_response_euw:
            connection: default
            callback:   riot_api_response_euw_server
            qos_options: {prefetch_size: 0, prefetch_count: 500, global: true}
            exchange_options: {name: riot_api_response_euw, type: topic}
            queue_options: {name: riot_api_response_euw_queue, durable: false, auto_delete: true}
            serializer: json_encode            
        
        riot_api_response_na:
            connection: default
            callback:   riot_api_response_na_server
            qos_options: {prefetch_size: 0, prefetch_count: 500, global: true}
            exchange_options: {name: riot_api_response_na, type: topic}
            queue_options: {name: riot_api_response_na_queue, durable: false, auto_delete: true}
            serializer: json_encode            
